- name: disable default nodejs
  ansible.builtin.command: dnf module disable nodejs -y
- name: enable nodejs:20
  ansible.builtin.command: dnf module enable nodejs:20 -y
- name: install nodejs and mysql
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  loop: 
    - nodejs
    - mysql

- name: install python libraries
  ansible.builtin.pip:
  executable: pip3.9
  name: "{{ item }}"
  loop:
  - cryptography
  - PyMySQL

- name: create expense user
  ansible.builtin.user:
  name: expense
  state: present
  home: /app

- name: remove app directory if exists
  ansible.builtin.file:
  path: /app
  state: absent
- name: create app directory
  ansible.builtin.file:
  path: /app
  state: directory

- name: remove old files in temp
  ansible.builtin.file:
  path: /tmp/backend.zip
  state: absent

- name: download code
  ansible.builtin.get_url:
  url: https://expense-joindevops.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
  dest: /tmp/backend.zip
- name: unzip in app directory
  ansible.builtin.unarchive:
  src: /tmp/backend.zip
  dest: /app
  remote_src: yes

- name: Install dependencies of node.js package.
  community.general.npm:
  path: /app

- name: copy service file
  ansible.builtin.copy:
  src: backend.service
  dest: /etc/systemd/system/backend.service

- name: load mysql schema
  community.mysql.mysql_db:
  name: all
  login_host: mysql.gangu.fun
  login_user: root
  login_password: ExpenseApp@1
  state: import
  target: /app/schema/backend.sql

- name: reload daemon and start services
  ansible.builtin.systemd_service:
    name: backend
    enabled: true
    state: restarted
    daemon_reload: true